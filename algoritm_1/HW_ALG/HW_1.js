// 1 уровень сложности: Level 1
// Найти индекс заданного числа в массиве: {3, 6, 4, 7, 2, 1, 9}
// Алгоритм на вход должен получать любой массив и одну цифру, индекс которой требуется найти.

// Задание считается выполненным если: использован ”Линейный подход” начиная от последнего элемента и алгоритм соответствует характеристикам алгоритма и выдает верный результат. Используйте блок схему.



// START
// INPUT массив и искомое число
// инициализировать переменную index значением -1
// инициализировать переменную i значением длины массива - 1

// цикл по i с шагом -1, пока i >= 0:
//     если массив[i] равен искомому числу, то:
//         присвоить переменной index значение i
//         остановить цикл
//     иначе:
//         уменьшить i на 1

// INDEX

// END


function findIndex(arr, num) {
    let index = -1
    let i = arr.length - 1

    while (i >= 0) {
        if (arr[i] === num) {
            index = i
            break
        }
        i--
    }

    return index
}

const arr = [3, 6, 4, 7, 2, 1, 9]
const num = 9

const result = findIndex(arr, num);
console.log(result);





// _________________________________

// Реализовать алгоритм, который будет находить сумму квадратов всех элементов массива!  {3, 6, 4, 7, 2, 1, 9}


// Задание считается выполненным если: использован ”Линейный подход” и алгоритм соответствует характеристикам алгоритма и выдает верный результат.


// 1) Инициализируем переменную "сумма" значением 0.
// 2) Проходим по всем элементам массива.
// 3) На каждой итерации квадратируем текущий элемент и прибавляем его к переменной "сумма".
// 4) По окончании цикла возвращаем значение переменной "сумма".

// function sumOfSquares(arr) {
//   let sum = 0

// for (let i = 0; i < arr.length; i++) {
//     sum += Math.pow(arr[i], 2)
//   }

// return sum
// }

// const array = [3, 6, 4, 7, 2, 1, 9]
// const result = sumOfSquares(array)
// console.log(result);  